#!/usr/bin/env bash

set -eu

source "$PGENV_LIBEXEC"/pgenv--load

# Command line options
declare -A options
options=(
  [default]=0
  [edit]=0
  [global]=0
  [list]=0
  [local]=0
)

# Arguments array
arguments=()

# Configure options used by default
default_configure_options_file="$PGENV_ROOT/configure_options"

# Local configure options.
local_configure_options_file="$PWD/pgenv_configure_opts"

# Version
pg_configure_version=

# Default editor
EDITOR="${EDITOR:-vi}"


#: parse_options [arg ...]
#:   Parse command line options.
#:
parse_options() {
  while [ $# -gt 0 ]; do
    case "$1" in
      -e|--edit)    options[edit]=1       ;;
      -l|--list)    options[list]=1       ;;
      --default)    options[default]=1    ;;
      --local)      options[local]=1      ;;
      --global)     options[global]=1     ;;
      -*)
        abort "error: $(self): invalid option: $1"
        ;;
      *)
        arguments[${#arguments[@]}]="$1"
        ;;
    esac
    shift
  done

  if [ ${#arguments[@]} -eq 0 ]; then
    pg_configure_version="$(basename "$(readlink  "$PGENV_ROOT"/"$PGENV_DEFAULT_LINK")")"
  else
    pg_configure_version="${arguments[0]}"
  fi

  if [ ${options[edit]} -eq 1 ] && [ ${options[list]} -eq 1 ]; then
    abort "error: Eather one of --edit and --list must be set"
  fi

  if [ ${options[global]} -eq 1 ] && [ ${options[local]} -eq 1 ] && [ ${options[default]} -eq 1 ]; then
    abort "error: Eather one of --global, --local and --default must be set"
  fi
}


#: edit_configure_options
#:   Edit default configure options.
#:
edit_configure_options() {
  local text=""
  if [ -s /dev/stdin ]; then
    text="$(</dev/stdin)"
  fi

  if [ -z "$text" ]; then
    if [ ${options[local]} -eq 1 ]; then
      $EDITOR "$local_configure_options_file"
    elif [ ${options[global]} -eq 1 ]; then
      $EDITOR "$PGENV_ROOT/configure_options-${pg_configure_version}"
    elif [ ${options[default]} -eq 1 ]; then
      if [ -e "$default_configure_options_file" ]; then
        $EDITOR "$default_configure_options_file"
      fi
    else
      $EDITOR "$PGENV_ROOT/configure_options-${pg_configure_version}"
    fi
  else
    if [ ${options[local]} -eq 1 ]; then
      printf "%b\n" "$text" > "$local_configure_options_file"
    elif [ ${options[global]} -eq 1 ]; then
      printf "%b\n" "$text" > "$PGENV_ROOT/configure_options-${pg_configure_version}"
    elif [ ${options[default]} -eq 1 ]; then
      if [ -e "$default_configure_options_file" ]; then
        printf "%b\n" "$text" > "$default_configure_options_file"
      fi
    else
      printf "%b\n" "$text" > "$PGENV_ROOT/configure_options-${pg_configure_version}"
    fi
  fi
  :
}


#: show_configure_options
#:   Show configure options.
#:
show_configure_options() {
  local version_configure=

  if [ ${options[local]} -eq 1 ]; then
    if [ -e "$local_configure_options_file" ]; then
      echo "#$local_configure_options_file"
      cat "$local_configure_options_file"
    fi
  elif [ ${options[global]} -eq 1 ]; then
    version_configure="$PGENV_ROOT/configure_options-${pg_configure_version}"
    if [ -e "$version_configure" ]; then
      echo "#$version_configure"
      cat "$version_configure"
    fi
  elif [ ${options[default]} -eq 1 ]; then
    if [ -e "$default_configure_options_file" ]; then
      echo "#$default_configure_options_file"
      cat "$default_configure_options_file"
    fi
  else
    if [ -e "$local_configure_options_file" ]; then
      echo "#$local_configure_options_file"
      cat "$local_configure_options_file"
    elif [ -e "$version_configure" ]; then
      version_configure="$PGENV_ROOT/configure_options-${pg_configure_version}"
      echo "#$version_configure"
      cat "$version_configure"
    elif [ -e "$default_configure_options_file" ]; then
      echo "#$default_configure_options_file"
      cat "$default_configure_options_file"
    fi
  fi
  :
}


# Parse command line options.
parse_options "$@"

if [ ${options[edit]} -eq 1 ]; then
  edit_configure_options
else
  show_configure_options
fi

exit $?


#=begin COMMAND
#
# configure   Edit or show configure options.
#
#=end COMMAND

#=begin HELP
#
# Usage: pgenv configure [-e|--edit|-l|--list] [--local|--global|--default] [<version>]
#
# Edit or show configure options.
#
#
# SYNOPSIS
#   pgenv configure -e --global
#   pgenv configure -e --global 10.3
#   pgenv configure -e --local <<EOF
#   --with-libxml CFLAGS="-DOPTIMIZER_DEBUG"
#   EOF
#   pgenv configure -e --default
#   pgenv configure [--global <current version> || -l --default]
#
# OPTIONS
#   -e, --edit
#     Edit configure options.
#
#   -l, --list
#     Show configure options.
#
#   --default
#     Default configure options. Global file is $PGENV_ROOT/configure_options.
#
#   --global
#     Global configure options of current context. The file is $PGENV_ROOT/configure_options-<version>.
#
#   --local
#     Local configure options. Local file is 'pgenv_configure_opts' in current directory.
#
#
#=end HELP
